<?php

use Cissee\WebtreesExt\MoreI18N;
use Fisharebest\Webtrees\Module\ModuleInterface;
use Fisharebest\Webtrees\Module\ModuleMapLinkInterface;
use Fisharebest\Webtrees\Services\ModuleService;
use Vesta\Hook\HookInterfaces\FunctionsPlaceUtils;
use Vesta\Model\PlaceStructure;

/**
 * @var PlaceStructure  $ps
 * @var ModuleInterface $module
 * @var bool            $hideCoordinates
 */

$mapCoordinates = FunctionsPlaceUtils::plac2map($module, $ps, false); //DO NOT fallbackViaParents for actual displayed coordinates!

$fact = $ps->asFact();
//TODO could enhance this fact here so that non-Vesta map-providers get 'indirect' coordinates as well
/*
$mapCoordinates2 = FunctionsPlaceUtils::plac2map($module, $ps, true);
if ($mapCoordinates2 !== null) {
    //TODO implement withCoordinates()
    $fact = $ps->withCoordinates($mapCoordinates2)->asFact();
}
*/

$mapLinks = \Vesta\VestaUtils::get(ModuleService::class)
    ->findByInterface(ModuleMapLinkInterface::class)
    ->map(fn(ModuleMapLinkInterface $module): string => ' ' . $module->mapLink($fact))
    ->implode('');

//mapCoordinates may be null even if we have map links (if we determine map links via fallbackViaParents)
if ($hideCoordinates || ($mapCoordinates == null)) {
    echo $mapLinks;
    return;
}

if ($mapCoordinates == null) {
    return;
}

$title = ' title="' . htmlspecialchars($mapCoordinates->getTrace()->getAll()) . '"';

?>

<div class="wt-fact-coordinates">
    <span class="label"<?= $title ?>><?= MoreI18N::xlate('Latitude') ?>: </span><?= $mapCoordinates->getLati() ?>
    <span class="label"<?= $title ?>><?= MoreI18N::xlate('Longitude') ?>: </span><?= $mapCoordinates->getLong() ?>
    <?= $mapLinks ?>
</div>
